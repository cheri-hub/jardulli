# Testar Ambiente HML
Write-Host "üß™ Testando ambiente HML..." -ForegroundColor Green

$ProjectUrl = "https://aoktoecyoxzgdraszzjb.supabase.co"
$AnonKey = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFva3RvZWN5b3h6Z2RyYXN6empiIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NjE5OTU4MjIsImV4cCI6MjA3NzU3MTgyMn0.1Eyr83dJNj1zzixUA4GC1c1zpgbcdp_mfgSWKlBI5gc"

Write-Host "üîó Projeto HML: $ProjectUrl" -ForegroundColor Blue

# Testar conectividade b√°sica
Write-Host "üì° Testando conectividade com Supabase..." -ForegroundColor Blue
try {
    $headers = @{
        "apikey" = $AnonKey
        "Authorization" = "Bearer $AnonKey"
    }
    
    $response = Invoke-RestMethod -Uri "$ProjectUrl/rest/v1/" -Headers $headers -TimeoutSec 10
    Write-Host "‚úÖ Conectividade com database OK" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erro de conectividade: $_" -ForegroundColor Red
    Write-Host "üí° Verifique se o projeto HML est√° ativo" -ForegroundColor Yellow
}

# Testar tabelas
Write-Host "üìä Testando acesso √†s tabelas..." -ForegroundColor Blue
try {
    $response = Invoke-RestMethod -Uri "$ProjectUrl/rest/v1/gemini_usage_metrics?select=count" -Headers $headers -TimeoutSec 10
    Write-Host "‚úÖ Tabela gemini_usage_metrics acess√≠vel" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erro ao acessar tabela gemini_usage_metrics: $_" -ForegroundColor Red
    Write-Host "üí° Execute .\tools\apply-migrations-hml.ps1 primeiro" -ForegroundColor Yellow
}

# Testar Edge Function
Write-Host "ü§ñ Testando Edge Function ai-chat..." -ForegroundColor Blue
$testPayload = @{
    message = "Teste do ambiente HML"
    userId = "test-user-hml-123"
} | ConvertTo-Json

try {
    $headers = @{
        "apikey" = $AnonKey
        "Authorization" = "Bearer $AnonKey"
        "Content-Type" = "application/json"
    }
    
    $response = Invoke-RestMethod -Uri "$ProjectUrl/functions/v1/ai-chat" -Method Post -Body $testPayload -Headers $headers -TimeoutSec 30
    
    if ($response.success) {
        Write-Host "‚úÖ Edge Function ai-chat respondeu com sucesso!" -ForegroundColor Green
        if ($response.reply) {
            Write-Host "üí¨ Resposta: $($response.reply.Substring(0, [Math]::Min(100, $response.reply.Length)))..." -ForegroundColor Gray
        }
    } else {
        Write-Host "‚ö†Ô∏è Edge Function respondeu mas com erro: $($response.error)" -ForegroundColor Yellow
    }
} catch {
    Write-Host "‚ùå Erro na Edge Function: $_" -ForegroundColor Red
    Write-Host "üí° Verifique se as Edge Functions foram deployadas e vari√°veis configuradas" -ForegroundColor Yellow
}

# Verificar m√©tricas de custo (se dispon√≠vel)
Write-Host "üí∞ Testando captura de m√©tricas de custo..." -ForegroundColor Blue
try {
    $response = Invoke-RestMethod -Uri "$ProjectUrl/rest/v1/gemini_usage_metrics?select=*&limit=5" -Headers $headers -TimeoutSec 10
    $count = $response.Count
    Write-Host "üìä M√©tricas capturadas: $count registros" -ForegroundColor Green
    
    if ($count -gt 0) {
        $latestMetric = $response[0]
        Write-Host "üîç √öltima m√©trica:" -ForegroundColor Blue
        Write-Host "   - Modelo: $($latestMetric.model_used)" -ForegroundColor Gray
        Write-Host "   - Tokens: $($latestMetric.total_tokens)" -ForegroundColor Gray
        Write-Host "   - Custo: `$$($latestMetric.total_cost_usd)" -ForegroundColor Gray
    }
} catch {
    Write-Host "‚ö†Ô∏è Ainda n√£o h√° m√©tricas capturadas (normal se √© a primeira vez)" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "üéØ Pr√≥ximos passos para teste completo:" -ForegroundColor Yellow
Write-Host "1. Configure GEMINI_API_KEY no dashboard Supabase" -ForegroundColor White
Write-Host "2. Execute .\tools\build-hml.ps1 para build do frontend" -ForegroundColor White
Write-Host "3. Acesse o frontend e teste o chat completo" -ForegroundColor White
Write-Host "4. Monitore a tabela gemini_usage_metrics para validar custos" -ForegroundColor White
Write-Host ""
Write-Host "üîó Dashboard HML: https://supabase.com/dashboard/project/aoktoecyoxzgdraszzjb" -ForegroundColor Blue